// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_tdd_q/test/common/recipe/data/repositories/recipe_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_tdd_q/common/domain/models/recipe.dart' as _i2;
import 'package:flutter_tdd_q/common/network/api_client.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRecipes_0 extends _i1.SmartFake implements _i2.Recipes {
  _FakeRecipes_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i3.ApiClient {
  MockApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Recipes> getRandomRecipes({
    int? number = 10,
    List<String>? tags,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRandomRecipes,
          [],
          {
            #number: number,
            #tags: tags,
          },
        ),
        returnValue: _i4.Future<_i2.Recipes>.value(_FakeRecipes_0(
          this,
          Invocation.method(
            #getRandomRecipes,
            [],
            {
              #number: number,
              #tags: tags,
            },
          ),
        )),
      ) as _i4.Future<_i2.Recipes>);
}
